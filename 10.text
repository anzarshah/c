

#include <stdio.h>
#include <stdlib.h>
struct node
{

    int data;
    struct node *left;
    struct node *right;
};

typedef struct node *NODE;

NODE insert(NODE root)
{
    NODE temp = (NODE)malloc(sizeof(struct node));
    printf("->");
    scanf("%d", &temp->data);
    temp->left = temp->right = NULL;

    if (root == NULL)
    {
        root = temp;
        return root;
    }

    else
    {
        NODE curr = root;
        NODE prev = NULL;
        while (curr != NULL)
        {
            prev = curr;
            if (curr->data < temp->data)
            {
                curr = curr->right;
            }
            else
            {
                curr = curr->left;
            }
        } //prev is the last node
        if (temp->data > prev->data)
        {
            prev->right = temp;
        }

        else
        {
            prev->left = temp;
        }
    }

    return root;
}

NODE create(NODE root)
{
    int n;
    printf("ENTER THE NO. OF NODES: ");
    scanf("%d", &n);
    for (int i = 0; i < n; ++i)
    {
        root = insert(root);
    }
}

void search(NODE root)
{
    printf("ENTER THE VALUE YOU WANT TO SEARCH");
    int item;
    scanf("%d", &item);

    NODE curr = root;
    while (curr != NULL)
    {
        if (item = curr->data)
        {
            printf("found");
            return;
        }

        else
        {
            if (item > curr->data)
            {
                curr = curr->right;
            }
            else
            {
                curr = curr->left;
            }
        }
    }

    printf("item is not found");
}

void preorder(struct node *node)
{
    if (node != NULL)
    {
        printf("%d ", node->data);
        preorder(node->left);
        preorder(node->right);
    }
}

int main()
{
    struct node *root = NULL;
    int exit_ = 0;
    do
    {
        printf("\n\n1. Create   2. Search   3. Preorder   4. Inorder  5. Postorder  6. Exit\n");
        printf("Enter choice: ");
        int choice;
        scanf("%d", &choice);

        switch (choice)
        {
        case 1:
            root = create(root);
            break;
        case 2:
            search(root);
            break;
        case 4:
            preorder(root);
            break;
        case 6:
            exit_ = 1;
            break;
        default:
            printf("enter correct choice!");
        }
    } while (!exit_);

    return 0;
}
